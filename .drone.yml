workspace:
  base: /var/www/owncloud
  path: apps/encryption

branches: [master, release*, release/*]

pipeline:
  install-core:
    image: owncloudci/core
    version: ${OC_VERSION}
    pull: true
    exclude: "apps/encryption"
    db_type: ${DB_TYPE}
    db_name: ${DB_NAME}
    db_host: ${DB_TYPE}
    db_username: autotest
    db_password: owncloud
    when:
      matrix:
        NEED_CORE: true

  install-fed-server:
    image: owncloudci/core
    pull: true
    version: ${FEDERATION_OC_VERSION}
    core_path: /var/www/owncloud/fed-server
    when:
      matrix:
        USE_FEDERATED_SERVER: true

  configure-federation-server:
    image: owncloudci/php:${PHP_VERSION}
    pull: true
    commands:
      - cd /var/www/owncloud/fed-server
      - php occ a:l
      - php occ a:e testing
      - php occ a:l
      - php occ config:system:set trusted_domains 1 --value=owncloud
      - php occ config:system:set trusted_domains 2 --value=federated
      - php occ log:manage --level 0
      - php occ config:list
      - echo "export TEST_SERVER_FED_URL=http://federated" > /var/www/owncloud/saved-settings.sh
    when:
      matrix:
        USE_FEDERATED_SERVER: true

  fix-permissions-federation-server:
    image: owncloudci/php:${PHP_VERSION}
    pull: true
    commands:
      - chown www-data /var/www/owncloud/fed-server -R
    when:
      matrix:
        USE_FEDERATED_SERVER: true

  install-app:
    image: owncloudci/php:${PHP_VERSION}
    pull: true
    commands:
      - cd /var/www/owncloud/
      - php occ a:l
      - php occ a:e encryption
      - php occ a:e testing
      - php occ encryption:enable
      - php occ encryption:select-encryption-type ${ENCRYPTION_TYPE} --yes
      - php occ a:l
      - php occ config:system:set trusted_domains 1 --value=owncloud
      - php occ config:system:set trusted_domains 2 --value=federated
      - php occ log:manage --level 0
      - php occ config:list
    when:
      matrix:
        NEED_INSTALL_APP: true

  fix-permissions:
    image: owncloudci/php:${PHP_VERSION}
    pull: true
    commands:
      - chown www-data /var/www/owncloud -R
      - chmod 777 /var/www/owncloud/tests/acceptance/filesForUpload -R
      - chmod +x /var/www/owncloud/tests/acceptance/run.sh
    when:
      matrix:
        NEED_SERVER: true

  owncloud-log:
    image: owncloud/ubuntu:16.04
    detach: true
    pull: true
    commands:
      - tail -f /var/www/owncloud/data/owncloud.log
    when:
      matrix:
        NEED_SERVER: true

  owncloud-coding-standard:
    image: owncloudci/php:${PHP_VERSION}
    pull: true
    commands:
      - make test-php-style
    when:
      matrix:
        TEST_SUITE: owncloud-coding-standard

  code-check:
    image: owncloudci/php:${PHP_VERSION}
    pull: true
    commands:
      - cd /var/www/owncloud
      #- php ./occ app:check-code encryption -c private -c strong-comparison
      - php ./occ app:check-code encryption -c deprecation
    when:
      matrix:
        TEST_SUITE: phpunit

  phpstan:
    # phpstan requires php7.1
    image: owncloudci/php:7.1
    pull: true
    environment:
      - COMPOSER_HOME=/var/www/owncloud/apps/password_policy/.cache/composer
    commands:
      - make test-php-phpstan
    when:
      matrix:
        TEST_SUITE: phpstan

  phan-70:
    # phan requires a recent php-ast extension
    image: owncloudci/php:7.0
    pull: true
    environment:
      - COMPOSER_HOME=/var/www/owncloud/apps/password_policy/.cache/composer
    commands:
      - make test-php-phan
    when:
      matrix:
        TEST_SUITE: phan-70

  phan-71:
    # phan requires a recent php-ast extension
    image: owncloudci/php:7.1
    pull: true
    environment:
      - COMPOSER_HOME=/var/www/owncloud/apps/password_policy/.cache/composer
    commands:
      - make test-php-phan
    when:
      matrix:
        TEST_SUITE: phan

  phan-72:
    # phan requires a recent php-ast extension
    image: owncloudci/php:7.2
    pull: true
    environment:
      - COMPOSER_HOME=/var/www/owncloud/apps/password_policy/.cache/composer
    commands:
      - make test-php-phan
    when:
      matrix:
        TEST_SUITE: phan

  phpunit-tests:
    image: owncloudci/php:${PHP_VERSION}
    pull: true
    environment:
      - COVERAGE=${COVERAGE}
    commands:
      - if [ -z "${COVERAGE}" ]; then make test-php-unit; fi
      - if [ "${COVERAGE}" = "true" ]; then make test-php-unit-dbg; fi
    when:
      matrix:
        TEST_SUITE: phpunit

  cli-acceptance-tests:
    image: owncloudci/php:${PHP_VERSION}
    pull: true
    environment:
      - TEST_SERVER_URL=http://owncloud
      - PLATFORM=Linux
      - BEHAT_SUITE=${BEHAT_SUITE}
    commands:
      - make test-acceptance-cli
    when:
      matrix:
        TEST_SUITE: cli-acceptance

  webui-acceptance-tests:
    image: owncloudci/php:${PHP_VERSION}
    pull: true
    environment:
      - BROWSER=chrome
      - SELENIUM_HOST=selenium
      - SELENIUM_PORT=4444
      - TEST_SERVER_URL=http://owncloud
      - PLATFORM=Linux
      - BEHAT_SUITE=${BEHAT_SUITE}
      - MAILHOG_HOST=email
    commands:
      - make test-acceptance-webui
    when:
      matrix:
        TEST_SUITE: web-acceptance

  core-webui-acceptance-tests:
    image: owncloudci/php:${PHP_VERSION}
    pull: true
    environment:
      - BROWSER=chrome
      - SELENIUM_HOST=selenium
      - TEST_SERVER_URL=http://owncloud
      - SELENIUM_PORT=4444
      - PLATFORM=Linux
      - MAILHOG_HOST=email
      - DIVIDE_INTO_NUM_PARTS=15
      - RUN_PART=${PART}
    commands:
      - touch /var/www/owncloud/saved-settings.sh
      - . /var/www/owncloud/saved-settings.sh
      - make test-acceptance-core-webui
    when:
      matrix:
        TEST_SUITE: core-web-acceptance

  core-api-acceptance-tests:
    image: owncloudci/php:${PHP_VERSION}
    pull: true
    environment:
      - TEST_SERVER_URL=http://owncloud
      - MAILHOG_HOST=email
      - DIVIDE_INTO_NUM_PARTS=15
      - RUN_PART=${PART}
    commands:
      - touch /var/www/owncloud/saved-settings.sh
      - . /var/www/owncloud/saved-settings.sh
      - make test-acceptance-core-api
    when:
      matrix:
        TEST_SUITE: core-api-acceptance

  core-api-acceptance-by-suite:
    image: owncloudci/php:${PHP_VERSION}
    pull: true
    environment:
      - TEST_SERVER_URL=http://owncloud
      - MAILHOG_HOST=email
      - BEHAT_SUITE=${BEHAT_SUITE}
    commands:
      - touch /var/www/owncloud/saved-settings.sh
      - . /var/www/owncloud/saved-settings.sh
      - make test-acceptance-core-api
    when:
      matrix:
        TEST_SUITE: core-api-acceptance-by-suite

  codecov:
    image: plugins/codecov:2
    secrets: [codecov_token]
    pull: true
    paths:
      - tests/output/*.xml
    when:
      local: false
      matrix:
        COVERAGE: true

  notify:
    image: plugins/slack:1
    pull: true
    secrets: [slack_webhook]
    channel: builds
    when:
      local: false
      status: [failure, changed]
      event: [push, tag]

services:
  owncloud:
    image: owncloudci/php:${PHP_VERSION}
    pull: true
    environment:
      - APACHE_WEBROOT=/var/www/owncloud
    command: [ "/usr/local/bin/apachectl", "-e", "debug" , "-D", "FOREGROUND" ]
    when:
      matrix:
        NEED_SERVER: true

  federated:
    image: owncloudci/php:${PHP_VERSION}
    pull: true
    environment:
      - APACHE_WEBROOT=/var/www/owncloud/fed-server
    command: [ "/usr/local/bin/apachectl", "-e", "debug" , "-D", "FOREGROUND" ]
    when:
      matrix:
        USE_FEDERATED_SERVER: true

  selenium:
    image: selenium/standalone-chrome-debug:latest
    pull: true
    when:
      matrix:
        NEED_SELENIUM: true

  mysql:
    image: mysql:5.7
    environment:
      - MYSQL_USER=autotest
      - MYSQL_PASSWORD=owncloud
      - MYSQL_DATABASE=owncloud
      - MYSQL_ROOT_PASSWORD=owncloud
    when:
      matrix:
        DB_HOST: mysql

  pgsql:
    image: postgres:9.4
    environment:
      - POSTGRES_USER=autotest
      - POSTGRES_PASSWORD=owncloud
      - POSTGRES_DB=owncloud
    when:
      matrix:
        DB_TYPE: pgsql

  email:
    image: mailhog/mailhog
    pull: true
    when:
      matrix:
        NEED_EMAIL: true

matrix:
  include:
    # owncloud-coding-standard
    - PHP_VERSION: 7.1
      TEST_SUITE: owncloud-coding-standard

    - PHP_VERSION: 7.2
      TEST_SUITE: owncloud-coding-standard

    - PHP_VERSION: 7.3
      TEST_SUITE: owncloud-coding-standard

    # Unit Tests

    #
    # master
    #
    # php 7.1
    - PHP_VERSION: 7.1
      OC_VERSION: daily-master-qa
      TEST_SUITE: phpunit
      DB_TYPE: sqlite
      NEED_CORE: true
      COVERAGE: true

    - PHP_VERSION: 7.1
      OC_VERSION: daily-master-qa
      TEST_SUITE: phpunit
      DB_TYPE: mysql
      DB_HOST: mysql
      NEED_CORE: true
      COVERAGE: true

    - PHP_VERSION: 7.1
      OC_VERSION: daily-master-qa
      TEST_SUITE: phpunit
      DB_TYPE: pgsql
      DB_HOST: pgsql
      NEED_CORE: true
      COVERAGE: true

    # php 7.2
    - PHP_VERSION: 7.2
      OC_VERSION: daily-master-qa
      TEST_SUITE: phpunit
      DB_TYPE: sqlite
      NEED_CORE: true

    - PHP_VERSION: 7.2
      OC_VERSION: daily-master-qa
      TEST_SUITE: phpunit
      DB_TYPE: mysql
      DB_HOST: mysql
      NEED_CORE: true

    - PHP_VERSION: 7.2
      OC_VERSION: daily-master-qa
      TEST_SUITE: phpunit
      DB_TYPE: pgsql
      DB_HOST: pgsql
      NEED_CORE: true

    #
    # stable10
    #
    # php 5.6
    - PHP_VERSION: 5.6
      OC_VERSION: daily-stable10-qa
      TEST_SUITE: phpunit
      DB_TYPE: sqlite
      NEED_CORE: true

    - PHP_VERSION: 5.6
      OC_VERSION: daily-stable10-qa
      TEST_SUITE: phpunit
      DB_TYPE: mysql
      DB_HOST: mysql
      NEED_CORE: true

    - PHP_VERSION: 5.6
      OC_VERSION: daily-stable10-qa
      TEST_SUITE: phpunit
      DB_TYPE: pgsql
      DB_HOST: pgsql
      NEED_CORE: true

    # php 7.0
    - PHP_VERSION: 7.0
      OC_VERSION: daily-stable10-qa
      TEST_SUITE: phpunit
      DB_TYPE: mysql
      DB_HOST: mysql
      NEED_CORE: true

    # php 7.1
    - PHP_VERSION: 7.1
      OC_VERSION: daily-stable10-qa
      TEST_SUITE: phpunit
      DB_TYPE: sqlite
      NEED_CORE: true

    - PHP_VERSION: 7.1
      OC_VERSION: daily-stable10-qa
      TEST_SUITE: phpunit
      DB_TYPE: mysql
      DB_HOST: mysql
      NEED_CORE: true

    - PHP_VERSION: 7.1
      OC_VERSION: daily-stable10-qa
      TEST_SUITE: phpunit
      DB_TYPE: pgsql
      DB_HOST: pgsql
      NEED_CORE: true

    # php 7.2
    - PHP_VERSION: 7.2
      OC_VERSION: daily-stable10-qa
      TEST_SUITE: phpunit
      DB_TYPE: mysql
      DB_HOST: mysql
      NEED_CORE: true

    # Acceptance Tests
    ## encryption CLI acceptance tests masterkey encryption
    - PHP_VERSION: 7.1
      OC_VERSION: daily-master-qa
      NEED_CORE: true
      NEED_INSTALL_APP: true
      NEED_SERVER: true
      BEHAT_SUITE: cliEncryption
      TEST_SUITE: cli-acceptance
      ENCRYPTION_TYPE: masterkey
      DB_TYPE: mysql
      DB_HOST: mysql

    - PHP_VERSION: 7.1
      OC_VERSION: daily-master-qa
      NEED_CORE: true
      NEED_INSTALL_APP: true
      NEED_SERVER: true
      BEHAT_SUITE: cliEncryption
      TEST_SUITE: cli-acceptance
      ENCRYPTION_TYPE: masterkey
      DB_TYPE: pgsql
      DB_HOST: pgsql

    - PHP_VERSION: 7.2
      OC_VERSION: daily-master-qa
      NEED_CORE: true
      NEED_INSTALL_APP: true
      NEED_SERVER: true
      BEHAT_SUITE: cliEncryption
      TEST_SUITE: cli-acceptance
      ENCRYPTION_TYPE: masterkey
      DB_TYPE: mysql
      DB_HOST: mysql

    ## UI core stable10 with masterkey encryption
    ## API core master with user-keys encryption
    - PHP_VERSION: 7.1
      OC_VERSION: daily-master-qa
      NEED_CORE: true
      NEED_INSTALL_APP: true
      NEED_SERVER: true
      USE_FEDERATED_SERVER: true
      FEDERATION_OC_VERSION: daily-stable10-qa
      ENCRYPTION_TYPE: user-keys
      DB_TYPE: mysql
      DB_HOST: mysql
      TEST_SUITE: core-api-acceptance
      PART: 15

    - PHP_VERSION: 7.1
      OC_VERSION: daily-master-qa
      NEED_CORE: true
      NEED_INSTALL_APP: true
      NEED_SERVER: true
      USE_FEDERATED_SERVER: true
      FEDERATION_OC_VERSION: daily-stable10-qa
      ENCRYPTION_TYPE: user-keys
      DB_TYPE: mysql
      DB_HOST: mysql
      TEST_SUITE: core-api-acceptance-by-suite
      BEHAT_SUITE: apiWebdavProperties

    ## encryption WebUI acceptance tests user-keys encryption
    - PHP_VERSION: 7.1
      OC_VERSION: daily-master-qa
      NEED_CORE: true
      NEED_INSTALL_APP: true
      NEED_SERVER: true
      NEED_SELENIUM: true
      NEED_EMAIL: true
      BEHAT_SUITE: webUIUserKeysType
      TEST_SUITE: web-acceptance
      ENCRYPTION_TYPE: user-keys
      DB_TYPE: mysql
      DB_HOST: mysql
